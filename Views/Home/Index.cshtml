@model IEnumerable<SeatingChart.Models.HomeIndexViewModels>

@{
    Layout = null;
    var employees = new List<SeatingChart.Models.EmployeeModels>();
    employees = (List<SeatingChart.Models.EmployeeModels>)ViewBag.EmployeeNames;
}

@Html.Partial("_Header")

    <div class="container_lists">
        <div class="container_break col-md-6">
            @*start the break list table*@
            <h5 style="text-align:center">Break List</h5>
            <table class="table-bordered col-lg-12">
                @*populate the table with only those breaks that lack a TimeCleared value*@
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        if (item.TimeCleared == null)
                        {
                            <tr>
                                @*Make each name clickable to set a TimeCleared datetime.Now time*@
                                <td class="breakIdNumber">
                                    <input type="hidden" class="hiddenBreakID" value="@item.BreakId" />
                                    <a href="Javascript:;" class="empName">@item.DisplayName</a>
                                    @*@Html.ActionLink(item.DisplayName, "DeleteBreak", new { id = item.BreakId }, new { onclick = "return confirm('Remove from the break list?');" })*@
                                </td>
                                <td>
                                    &emsp;BV
                                </td>
                            </tr>
                        }
                    }
                }
            </table>
            <div class="form formBuffer" style="text-align:center">
                <div class="col-med-6">
                    <select class="index-dropdown" id="employeeId">
                        <option value="" selected>-- Dispatcher --</option>
                        @foreach (var employeeName in employees)
                        {
                            <option value="@employeeName.Id">@employeeName.DisplayName</option>
                        }
                    </select>
                </div>
                <div class="col-med-12 formBuffer">
                    <button id="submit-form" class="btn btn-secondary btn-sm">Submit</button>
                </div>
            </div>
        </div>
    </div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
<script>
    $(document).ready(function () {
        $("#submit-form").click(function () {
            var model = {};
            model.Employee = Number($("#employeeId").val());
            console.log("model", model);
            $.ajax({
                type: "HttpPost",
                url: "/Home/CreateData",
                dataType: 'json',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.success)
                        window.location.href = "/Home/Index";
                    else
                        alert("Something went wrong. What is this? TriTech?");
                },
                error: function () {
                    alert("Something went wrong. What is this? Tritech?");
                }
            });
        });

        

    });
     _
</script>
<script>
    $(".empName").click(function () {
        Swal.fire({
  title: 'Are you sure?',
  text: "You want to Remove this from the break list?!",
  icon: 'warning',
  showCancelButton: true,
  confirmButtonColor: '#3085d6',
  cancelButtonColor: '#d33',
  confirmButtonText: 'Yes, remove it!'
}).then((result) => {
  if (result.value) {
    $.ajax({
            type: "Post",
            url: "/Home/DeleteBreak",
            dataType: 'json',
            data: {"breakID":$(this).closest("tr").find(".hiddenBreakID").val()},
                success: function (data) {
                    
                    if (data == true) {
                        Swal.fire({
                         icon: 'success',
                         title: 'Successfully Removed!',
                         showConfirmButton: false,
                         timer: 2000,

                        })
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else
                    {
                        Swal.fire({
                         icon: 'error',
                         title: 'Failure!',
                         showConfirmButton: false,
                         timer: 2000
                       })
                    }
                },
                error: function () {
                    alert("Something went wrong. What is this? Tritech?");
                }
            });
  }
})

        
        });
</script>
